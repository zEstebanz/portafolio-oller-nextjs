  <aside className="h-full w-16 flex flex-col space-y-10 items-center justify-center absolute right-0  text-white">
            {/* Iconos en el panel derecho */}
            <div className="h-10 w-10 flex items-center justify-center rounded-lg cursor-pointer hover:text-gray-800 hover:bg-white hover:duration-300 hover:ease-linear focus:bg-white">
                <IoPersonOutline size={24} />
            </div>
            <div className="h-10 w-10 flex items-center justify-center rounded-lg cursor-pointer hover:text-gray-800 hover:bg-white hover:duration-300 hover:ease-linear focus:bg-white">
                <IoHomeOutline size={24} />
            </div>
            <div className="h-10 w-10 flex items-center justify-center rounded-lg cursor-pointer hover:text-gray-800 hover:bg-white hover:duration-300 hover:ease-linear focus:bg-white">
                <IoMoonOutline size={24} />
            </div>
            <div className="h-10 w-10 flex items-center justify-center rounded-lg cursor-pointer hover:text-gray-800 hover:bg-white hover:duration-300 hover:ease-linear focus:bg-white">
                <IoSettingsOutline size={24} />
            </div>
        </aside>


          {/* Carrusel */}
          <div className="carousel-container">
            <Slider {...settings}>

              <div>
                {/* Contenido del primer slide */}
                <Image src="https://esteban-oller.netlify.app/src/img/ico/react.png" alt="Slide 1" width={50} height={50} />
              </div>

              <div>
                {/* Contenido del primer slide */}
                <Image src="https://esteban-oller.netlify.app/src/img/ico/node.png" alt="Slide 1" width={50} height={50} />
              </div>

              <div>
                {/* Contenido del segundo slide */}
                <Image src="https://esteban-oller.netlify.app/src/img/ico/mongo.png" alt="Slide 2" width={50} height={50} />
              </div>

              <div>
                {/* Contenido del segundo slide */}
                <Image src="https://esteban-oller.netlify.app/src/img/ico/next2.png" alt="Slide 2" width={50} height={50} />
              </div>

              <div>
                {/* Contenido del segundo slide */}
                <Image src="https://esteban-oller.netlify.app/src/img/ico/sql.png" alt="Slide 2" width={50} height={50} />
              </div>

              <div>
                {/* Contenido del segundo slide */}
                <Image src="https://esteban-oller.netlify.app/src/img/ico/sass.png" alt="Slide 2" width={50} height={50} />
              </div>

              <div>
                {/* Contenido del segundo slide */}
                <Image src="https://esteban-oller.netlify.app/src/img/ico/gitRed.png" alt="Slide 2" width={50} height={50} />
              </div>

              <div>
                {/* Contenido del segundo slide */}
                <Image src="https://esteban-oller.netlify.app/src/img/ico/docker.png" alt="Slide 2" width={50} height={50} />
              </div>
            </Slider>
          </div>
        </div>
        {/* Fin del carrusel */}











        /*formulario*/

        {/* {emailSubmitted ? (
                        <p className="text-green-500 text-sm mt-2">
                            ¡Correo electrónico enviado exitosamente!
                        </p>
                    ) : (
                        <form className="flex flex-col" onSubmit={handleSubmit}>
                            <div className="mb-6">
                                <label
                                    htmlFor="email"
                                    className="text-white block mb-2 text-sm font-medium"
                                >
                                    Tu Email
                                </label>
                                <input
                                    name="email"
                                    type="email"
                                    id="email"
                                    required
                                    className="bg-[#18191E] border border-[#33353F] placeholder-[#9CA2A9] text-gray-100 text-sm rounded-lg block w-full p-2.5"
                                    placeholder="correo@gmail.com"
                                />
                            </div>
                            <div className="mb-6">
                                <label
                                    htmlFor="message"
                                    className="text-white block text-sm mb-2 font-medium"
                                >
                                    Mensaje
                                </label>
                                <textarea
                                    name="message"
                                    id="message"
                                    className="bg-[#18191E] border border-[#33353F] placeholder-[#9CA2A9] text-gray-100 text-sm rounded-lg block w-full p-2.5"
                                    placeholder="Vamos a hablar acerca de..."
                                />
                            </div>
                            <button
                                type="submit"
                                className="bg-button text-white font-medium py-2.5 px-5 rounded-lg w-full"
                            >
                                Enviar Mensaje
                            </button>
                        </form>
                    )} */}


                       const handleSubmit = async (e) => {
        e.preventDefault();
        const data = {
            email: e.target.email.value,
            subject: e.target.subject.value,
            message: e.target.message.value,
        };
        const JSONdata = JSON.stringify(data);
        const endpoint = "/api/send";

        // Form the request for sending data to the server.
        const options = {
            // The method is POST because we are sending data.
            method: "POST",
            // Tell the server we're sending JSON.
            headers: {
                "Content-Type": "application/json",
            },
            // Body of the request is the JSON data we created above.
            body: JSONdata,
        };

        const response = await fetch(endpoint, options);
        const resData = await response.json();

        if (response.status === 200) {
            console.log("Message sent.");
            setEmailSubmitted(true);
        }
    };
